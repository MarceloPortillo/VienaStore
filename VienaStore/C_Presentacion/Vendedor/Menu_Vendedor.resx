<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="fecha.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpBKs6bgOw1nEEsuNxBLPjcQSz43EEs+NxBLPjcQSz43EE
        s+NxBLPjcQSz43EEs+NxBLPjcQSz43EEs+NxBLPjcQSz43EEs+NxBLPjcQSz43EEs+NxBLLjbwOv1WgE
        qDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAJ8IcQCzG28GsKl7Br7/fwfE/4AHxf+AB8X/gAfF/4AH
        xf+AB8X/gAfF/4AHxf+AB8X/gAfF/4AHxf+AB8X/gAfF/4AHxf+AB8X/gAfF/4AHxf+AB8X/gAfF/38H
        w/96Br3/bgavpnEAsxtfAJ8IAAAAAAAAAABtALYOdgm4pnoIvPh5CLv/cAiu/4AJxP+DCcf/egi7/3kH
        uv95B7r/eQe6/3kHuv95B7r/eQe6/3kHuv95B7r/eQe6/3kHuv95B7r/eQe6/3kHuv95B7r/eQe6/3kH
        uv96CLv/gwnH/4AJxP9wBq//dwS5/3YEufhzA7WmbQC2DnkMupGCDcT/hw7K/4YOyf91C7T/gwvH/3sK
        vP92Brj/fAa//30HwP99B8H/fQfB/30Hwf99B8H/fQfB/30Hwf99B8H/fQfB/30Hwf99B8H/fQfB/30H
        wf99B8D/ewa+/3YGuP98Crz/ggvG/3UItP+BB8X/gAfF/3wHv/90BbaRgBHB2IoTzf+ME9D/ixPO/3gN
        tv+FDcj/egu5/34Jwv+ECsj/hArJ/4QKyf+ECsn/hArJ/4QKyf+ECsn/hArJ/4QKyf+ECsn/hArJ/4QK
        yf+ECsn/hArJ/4QKyf+DCsj/fQm//3wLvP+EDcj/eAu3/4YMyv+HDMv/hQzJ/3sLvtiGFsbfkBjS/5AY
        0/+PGNH/ehC4/4YPyv97Dbr/ggzG/4cMy/+HDMv/hwzL/4cMy/+HDMv/hwzL/4cMy/+HDMv/hwzL/4cM
        y/+HDMv/hgzK/446vv+IH8L/hwzL/4YMy/+ADMP/fg2+/4YPyf96Drn/ixLO/4sSz/+LEs7/ghHD34ob
        y9+UHdb/lR3X/5Md1P98E7r/iBHL/30PvP+FD8j/iQ/N/4kPzf+EDsX/gg7C/4IOwv+CDsL/gg7C/4IO
        wv+CDsL/gg7C/4IOwv+ADr//lF2z/51ewf+JD83/iQ/N/4IOxf9/D7//iBHK/30Ru/+PF9L/kBfT/48X
        0v+GFcjfjiHN3pci2f+ZItr/lyLY/38VvP+KE83/fxG9/4cRyv+LEs//ihLN/6Zyw/+0ncH/tJ3B/7Sd
        wf+0ncH/tJ3B/7Sdwf+0ncH/tJ3B/7Kbv/+9psr/nU3K/4sSz/+LEs7/hRHH/4ERwf+JE8z/fxS9/5Qd
        1v+UHdf/kx3V/4ocyt6VLNC8mSbZ/5wn3v+bJ9v/gRi+/4sVzv+BE7//iRTM/40V0f+NFdH/jBTP/4wU
        zv+MFM7/jBTO/4wUzv+MFM7/jBTO/4wUzv+MFM7/jBTO/4sUzv+NFND/jRXR/40V0P+HE8j/gxTC/4sV
        zf+BF7//mCLZ/5kj2v+VItb/kSfNvZczzkqhONn8nSzd/54s3v+DG8D/jRfQ/4IVwP+LF87/kBfT/5AX
        0/+QF9P/kBfT/5AX0v+NF8//dxi7/1Qdo/9LHp7/Xhup/4YXx/+PF9L/kBfT/5AX0/+QF9P/jxfS/4kW
        yv+FFsT/jRfP/4Qawv+cKN3/mijb/5401/yULM5KAAAAAJkz0DymQ9rMpT7d/4Qev/+PGdH/hBfB/44Z
        z/+SGtT/khrU/5Ia1P+SGtT/hBrF/y4ki/8FK2n/CyhV/wssX/8GOH7/GTSD/3cdu/+SGtT/khrU/5Ia
        1P+SGtT/ixnM/4YYxf+OGdD/hR7B/6Q63P+lP9nMlC7QPAAAAAAAAAAAAAAAAAAAAACZNtNGhiHA1ZAb
        0v+GGsP/kBzR/5Qd1v+UHdb/lB3W/44czv8hKoT/CDNy/xcmOv8VHlr/GSxE/xY7Z/8UT5P/MjyT/5Ec
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAWGCXNKxxCtJEuzUiQMM5fkjDMapIwzGqQMM5fkS7NSCwcRKwWGSTBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABYaJpMUFyLuABcXCwAAAAAAAAAAAAAAAAAAAAAAACQHFBgj6RYa
        JYcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEhclNxYZJf4UFiJ9AAAAAAAAAAAAAAAAAAAAABMX
        IngWGSX9ERciLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBsnqRUYI/sTFiJnAAAABAAA
        AAUTFiJoFRgj+hgbJp8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATExMNGRsnwRYa
        Jf8UFyL3FBci+BcaJf8YGye6AAAZCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADGRwoWRodKZsaHimZGBsnVQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////AAAA/AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAAAB4AAAB/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP+AAAH/gAAB/8AAA//gAAf/+A
        Af//4Af//+PH///jx///8A////AP///4H/8=
</value>
  </data>
</root>